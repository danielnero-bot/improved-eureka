rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Restaurant collection rules
    match /restaurants/{restaurantId} {
      allow read: if true;  // Public read access for restaurant listings
      allow create: if isAuthenticated() 
                   && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.ownerId);
      
      // Nested collections within restaurant documents
      match /menu/{menuItem} {
        allow read: if true;
        allow write: if isOwner(get(/databases/$(database)/documents/restaurants/$(restaurantId)).data.ownerId);
      }
    }

    // User profiles collection rules
    match /users/{userId} {
      allow read: if true;  // Public profiles
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }

    // Orders collection rules
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        request.auth.uid == resource.data.restaurantOwnerId
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        request.auth.uid == resource.data.restaurantOwnerId
      );
    }
  }
}